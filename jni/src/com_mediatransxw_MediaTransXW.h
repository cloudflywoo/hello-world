/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <mtxw.h>
/* Header for class com_mediatransxw_MediaTransXW */
#ifndef _Included_com_mediatransxw_MediaTransXW
#define _Included_com_mediatransxw_MediaTransXW

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvCreateInstance
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvCreateInstance
  (JNIEnv *, jclass, jint,jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvDestroyInstance
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvDestroyInstance
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvStart
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvStop
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvStop
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetLocalAddress
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetLocalAddress
  (JNIEnv *, jclass, jint, jstring, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetRemoteAddress
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetRemoteAddress
  (JNIEnv *, jclass, jint, jstring, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetFecParam
 * Signature: (ILjava/lang/I;I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetFecParam
  (JNIEnv *, jclass, jint, jint, jint,jint,jint,jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetInterface
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetInterface
  (JNIEnv *env, jclass, jint instanceid, jstring strInterface);


/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetDirection
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetDirection
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetAudioCodecType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetAudioCodecType
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetAudioSampleRate
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetAudioSampleRate
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetG729Param
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetG729Param
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetAmrParam
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetAmrParam
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetVideoCodecType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetVideoCodecType
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetH264param
 * Signature: (IIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetH264param
  (JNIEnv *, jclass, jint instanceId, jint frameRate,jint rtpRcvBufferSize,jint frameRcvBufferSize,jint initPlayFactor,jint discardflag,jint playYuvFlag);


/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSendAudioData
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSendAudioData
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSendVideoData
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSendVideoData
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

  /*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetSpeechEnLibDelayTime
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetSpeechEnLibDelayTime
  (JNIEnv *, jclass, jint);
  
  
/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetLogLevel
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetLogLevel
  (JNIEnv *, jclass,jint);

/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvActiveSpeechLib
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvActiveSpeechLib
  (JNIEnv *, jclass , jint flag);
  
/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvGetInstanceState
 * Signature: (I)I
 */
JNIEXPORT int JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvGetInstanceState
 (JNIEnv *, jclass , jint instanceid);
 
/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvGetVersionName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvGetVersionName
  (JNIEnv *env, jclass);


/*
 * Class:     com_mediatransxw_MediaTransXW
 * Method:    mtxwNtvSetRcvBuffer
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_mediatransxw_MediaTransXW_mtxwNtvSetRcvBuffer
  (JNIEnv *, jclass, jint, jobject, jint);


INT32 MTXW_PlayAudioPcmData(INT32 instId, const UINT8 *pData, UINT32 uLength);

INT32 MTXW_PlayVedioH264Data(INT32 instId, const UINT8 *pData, UINT32 uLength,int rotatedAngle,int uWidth,int uHeight,int uSsrc);
INT32 MTXW_PlayVedioYUV(INT32 instId, const UINT8 *pData, UINT32 uLength,int rotatedAngle,int uWidth,int uHeight,int uSsrc);
INT32 MTXW_UpdateStatistic(INT32 instId, int statisticId, double statisticValue);

#ifdef __cplusplus
}
#endif
#endif
